{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nvar songsSlice = createSlice({\n  name: 'song',\n  initialState: [],\n  reducers: {\n    // 'song' +'/' + 'addSong' = 'song/addSong'\n    addSong: function addSong(state, action) {\n      state.push(action.payload);\n    },\n    // 'song' +'/' + 'removeSong' = 'song/removeSong'\n    removeSong: function removeSong(state, action) {}\n  }\n});\nvar store = configureStore({\n  reducer: {\n    songs: songsSlice.reducer\n  }\n});\nconsole.log(JSON.stringify(finalState));","map":{"version":3,"names":["configureStore","createSlice","songsSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","store","reducer","songs","console","log","JSON","stringify","finalState"],"sources":["/Users/manashborah/Documents/GitHub/React/rtk/src/store/index.js"],"sourcesContent":["import {configureStore, createSlice} from '@reduxjs/toolkit';\n\nconst songsSlice = createSlice({\n    name: 'song',\n    initialState: [],\n    reducers: {\n        // 'song' +'/' + 'addSong' = 'song/addSong'\n        addSong(state, action){\n            state.push(action.payload);\n        },\n        // 'song' +'/' + 'removeSong' = 'song/removeSong'\n        removeSong(state, action){\n\n        }\n    }\n});\nconst store = configureStore({\n    reducer : {\n        songs: songsSlice.reducer\n    }\n});\n\n\nconsole.log(JSON.stringify(finalState));\n\n"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAE5D,IAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACN;IACAC,OAAO,WAAAA,QAACC,KAAK,EAAEC,MAAM,EAAC;MAClBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACD;IACAC,UAAU,WAAAA,WAACJ,KAAK,EAAEC,MAAM,EAAC,CAEzB;EACJ;AACJ,CAAC,CAAC;AACF,IAAMI,KAAK,GAAGZ,cAAc,CAAC;EACzBa,OAAO,EAAG;IACNC,KAAK,EAAEZ,UAAU,CAACW;EACtB;AACJ,CAAC,CAAC;AAGFE,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACC,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module"}