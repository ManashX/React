{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nvar songsSlice = createSlice({\n  name: 'song',\n  initialState: [],\n  reducers: {\n    addSong: function addSong(state, action) {\n      state.push(action.payload);\n    },\n    removeSong: function removeSong(state, action) {\n      //action.payload === string, the song we want to remove\n      var index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    }\n  }\n});\nvar moviesSlice = createSlice({\n  name: 'movie',\n  initialState: [],\n  reducers: {\n    addMovie: function addMovie(state, action) {\n      state.push(action.payload);\n    },\n    removeMovie: function removeMovie(state, action) {\n      //action.payload === string, the song we want to remove\n      var index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    }\n  }\n});\nvar store = configureStore({\n  reducer: {\n    songs: songsSlice.reducer,\n    movies: moviesSlice.reducer\n  }\n});\nexport { store };\nvar _songsSlice$actions = songsSlice.actions,\n  addSong = _songsSlice$actions.addSong,\n  removeSong = _songsSlice$actions.removeSong;\nexport { addSong, removeSong };\nvar _songsSlice$actions2 = songsSlice.actions,\n  addMovie = _songsSlice$actions2.addMovie,\n  removeMovie = _songsSlice$actions2.removeMovie;\nexport { addMovie, removeMovie };","map":{"version":3,"names":["configureStore","createSlice","songsSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","index","indexOf","splice","moviesSlice","addMovie","removeMovie","store","reducer","songs","movies","_songsSlice$actions","actions","_songsSlice$actions2"],"sources":["/Users/manashborah/Documents/GitHub/React/rtk/src/store/index.js"],"sourcesContent":["import {configureStore, createSlice} from '@reduxjs/toolkit';\n\n\nconst songsSlice = createSlice({\n    name: 'song',\n    initialState: [],\n    reducers: {\n        addSong(state, action){\n            state.push(action.payload);\n        },\n        removeSong(state, action){\n            //action.payload === string, the song we want to remove\n            const index = state.indexOf(action.payload);\n            state.splice(index, 1);\n        }\n    }\n});\nconst moviesSlice = createSlice({\n    name: 'movie',\n    initialState: [],\n    reducers: {\n        addMovie(state, action){\n            state.push(action.payload);\n        },\n        removeMovie(state, action){\n            //action.payload === string, the song we want to remove\n            const index = state.indexOf(action.payload);\n            state.splice(index, 1);\n        }\n    }\n});\nconst store = configureStore({\n    reducer : {\n        songs: songsSlice.reducer,\n        movies: moviesSlice.reducer\n    }\n});\n\n\nexport {store};\nexport const {addSong, removeSong} = songsSlice.actions;\nexport const {addMovie, removeMovie} = songsSlice.actions;"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAG5D,IAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,WAAAA,QAACC,KAAK,EAAEC,MAAM,EAAC;MAClBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,UAAU,WAAAA,WAACJ,KAAK,EAAEC,MAAM,EAAC;MACrB;MACA,IAAMI,KAAK,GAAGL,KAAK,CAACM,OAAO,CAACL,MAAM,CAACE,OAAO,CAAC;MAC3CH,KAAK,CAACO,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1B;EACJ;AACJ,CAAC,CAAC;AACF,IAAMG,WAAW,GAAGd,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNW,QAAQ,WAAAA,SAACT,KAAK,EAAEC,MAAM,EAAC;MACnBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDO,WAAW,WAAAA,YAACV,KAAK,EAAEC,MAAM,EAAC;MACtB;MACA,IAAMI,KAAK,GAAGL,KAAK,CAACM,OAAO,CAACL,MAAM,CAACE,OAAO,CAAC;MAC3CH,KAAK,CAACO,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1B;EACJ;AACJ,CAAC,CAAC;AACF,IAAMM,KAAK,GAAGlB,cAAc,CAAC;EACzBmB,OAAO,EAAG;IACNC,KAAK,EAAElB,UAAU,CAACiB,OAAO;IACzBE,MAAM,EAAEN,WAAW,CAACI;EACxB;AACJ,CAAC,CAAC;AAGF,SAAQD,KAAK;AACN,IAAAI,mBAAA,GAA8BpB,UAAU,CAACqB,OAAO;EAAzCjB,OAAO,GAAAgB,mBAAA,CAAPhB,OAAO;EAAEK,UAAU,GAAAW,mBAAA,CAAVX,UAAU;AAAuB,SAAAL,OAAA,EAAAK,UAAA;AACjD,IAAAa,oBAAA,GAAgCtB,UAAU,CAACqB,OAAO;EAA3CP,QAAQ,GAAAQ,oBAAA,CAARR,QAAQ;EAAEC,WAAW,GAAAO,oBAAA,CAAXP,WAAW;AAAuB,SAAAD,QAAA,EAAAC,WAAA"},"metadata":{},"sourceType":"module"}